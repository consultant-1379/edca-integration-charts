pipeline {
    agent {
        node {
            label 'E2c_Testing_Vapp'
        }
    }
    stages {
        stage('Prepare') {
            steps {
                sh 'uname -a;whoami;echo $PATH;groups'
                //sh 'git clean -xdff'
                sh 'git submodule sync'
                sh 'git submodule update --init --recursive'
                // Ensure that Bob has all of its dependencies.
                sh 'bob/bob --help'
            }
        }
        stage('Clean') {
            steps {
                sh 'bob/bob clean'
            }
        }
        stage('Init') {
            steps {
                sh 'bob/bob init'
            }
        }
        stage('Csar Package') {
            steps {
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    withCredentials([string(credentialsId: 'artifactory-api-token-id', variable: 'HELM_TOKEN')]){
                        sh 'cp /home/lciadm100/jenkins/workspace/edca-integration-staging-publish/.bob/eric-edca-integration-helm-*.tgz .'
                        sh 'bob/bob csar-package'
                    }
                }
            }
        }
    }
    post {
        always {
            archiveArtifacts 'eric-edca-*.csar'
            cleanWs()
        }
    }
}
